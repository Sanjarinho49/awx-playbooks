---
- name: Clone a VM from a template
  hosts: localhost
  connection: local
  gather_facts: yes
  collections:
    - community.windows
  tasks:
  #- name: retrieve disc information
  #  win_disk_facts:

  #- name: abort when the disk number does not exist
  #  fail:
  #    msg: "Disk does not exist. ( disk_number = {{ disk_number }} ) "
  #  when: ansible_disks[disk_number] is undefined

  - name: initialize disk
    win_shell: "Initialize-Disk -Number {{ disk_number }}"
    when: ansible_disks[disk_number].guid is none

  - name: create partition
    win_partition:
      drive_letter: "{{ drive_letter }}"
      partition_size: -1
      disk_number: "{{ disk_number }}"
    when: ansible_disks[disk_number].guid is none

  - name: format disk
    win_shell: "Format-Volume -DriveLetter {{ drive_letter }} "
    when: ansible_disks[disk_number].guid is none

#---
#- name: Clone a VM from a template
  #hosts: localhost
  #connection: local
  #gather_facts: yes
  #become: yes
  #collections:
  #  - community.windows
  #tasks:
  #- name: Forcefully initiallize a disk
  #  community.windows.win_initialize_disk:
  #    disk_number: 2
  #    force: yes
  #- name: Get disk facts
  #  win_disk_facts:
  #- name: Forcefully initiallize a disk
  #  community.windows.win_initialize_disk:
  #    disk_number: 2
  #    force: yes
    
  #- name: Initialize Disk
  #  win_shell: "Initialize-Disk -Number {{ disk_number }}"
  #  when: ansible_disks[disk_number].guid is none

  #- name: Create Partition using all available space
  #  community.windows.win_partition:
  #    drive_letter: "{{ drive_letter }}"
  #    partition_size: -1
  #    disk_number: "{{ disk_number }}"
  #  when: ansible_disks[disk_number].guid is none

  #- name: Format the partition as NTFS and label it
  #  win_format:
  #    drive_letter: "{{ drive_letter }}"
  #    file_system: NTFS
  #    new_label: Data
  #  when: ansible_disks[disk_number].guid is none
